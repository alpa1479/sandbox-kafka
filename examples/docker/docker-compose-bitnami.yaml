include:
  - docker-compose-kafka-ui.yaml
  - docker-compose-monitoring.yaml

# Utility commands:
# cd /bitnami/kafka/data - kafka log directory

# Properties description:
# https://kafka.apache.org/documentation/#configuration
# https://hub.docker.com/r/bitnami/kafka
services:

  zookeeper:
    image: bitnami/zookeeper:${B_ZOOKEEPER_VERSION}
    hostname: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ALLOW_ANONYMOUS_LOGIN: yes

  kafka_broker_1:
    image: bitnami/kafka:${B_KAFKA_BROKER_VERSION}
    hostname: broker1
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    volumes:
      - ./etc/jmx_exporter/jmx_prometheus_javaagent-0.19.0.jar:/etc/jmx_exporter/jmx_prometheus_javaagent-0.19.0.jar
      - ./etc/jmx_exporter/kafka-2_0_0.yml:/etc/jmx_exporter/kafka-2_0_0.yml
    environment:
      KAFKA_CFG_BROKER_ID: 1
      KAFKA_CFG_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://:29092, PLAINTEXT_HOST://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://broker1:29092, PLAINTEXT_HOST://localhost:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_OPTS: "-javaagent:/etc/jmx_exporter/jmx_prometheus_javaagent-0.19.0.jar=9998:/etc/jmx_exporter/kafka-2_0_0.yml"

  kafka_broker_2:
    image: bitnami/kafka:${B_KAFKA_BROKER_VERSION}
    hostname: broker2
    ports:
      - 9093:9093
    depends_on:
      - zookeeper
    volumes:
      - ./etc/jmx_exporter/jmx_prometheus_javaagent-0.19.0.jar:/etc/jmx_exporter/jmx_prometheus_javaagent-0.19.0.jar
      - ./etc/jmx_exporter/kafka-2_0_0.yml:/etc/jmx_exporter/kafka-2_0_0.yml
    environment:
      KAFKA_CFG_BROKER_ID: 2
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://:29093, PLAINTEXT_HOST://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://broker2:29093, PLAINTEXT_HOST://localhost:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_OPTS: "-javaagent:/etc/jmx_exporter/jmx_prometheus_javaagent-0.19.0.jar=9999:/etc/jmx_exporter/kafka-2_0_0.yml"

  kafka_brokers_init:
    image: bitnami/kafka:${B_KAFKA_BROKER_VERSION}
    init: true
    depends_on:
      kafka_broker_1:
        condition: service_started
      kafka_broker_2:
        condition: service_started
    entrypoint: [ "/bin/sh", "-c" ]
    command: |
      "
      kafka-topics.sh --bootstrap-server broker1:29092 --create --if-not-exists --topic static.message.topic --replication-factor 1 --partitions 4
      kafka-topics.sh --bootstrap-server broker1:29092 --create --if-not-exists --topic static.message.topic.failures --replication-factor 1 --partitions 1 --config retention.ms=300000
      kafka-topics.sh --bootstrap-server broker1:29092 --create --if-not-exists --topic dynamic.message.topic --replication-factor 1 --partitions 4
      kafka-topics.sh --bootstrap-server broker1:29092 --create --if-not-exists --topic dynamic.message.topic.failures --replication-factor 1 --partitions 1
      "
