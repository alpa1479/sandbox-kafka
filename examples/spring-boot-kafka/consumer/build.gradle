plugins {
    id "java"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter"
    implementation "org.springframework.shell:spring-shell-starter"
    implementation "org.springframework.kafka:spring-kafka"
    implementation "com.fasterxml.jackson.core:jackson-databind"

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.kafka:spring-kafka-test"
    testImplementation "org.testcontainers:kafka"
    testImplementation "org.testcontainers:junit-jupiter"

    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "org.junit.jupiter:junit-jupiter-engine"
    testImplementation "org.junit.jupiter:junit-jupiter-params"
    testImplementation "org.mockito:mockito-junit-jupiter"
    testImplementation "org.assertj:assertj-core"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

tasks.withType(JavaCompile) {
    options.with {
        encoding = "UTF-8"
    }
}