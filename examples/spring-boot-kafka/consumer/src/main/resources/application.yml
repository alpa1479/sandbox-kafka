application:
  kafka:
    topic-name: demo-topic
    dlt:
      suffix: .failures
      retention: 5m
    back-off:
      max-retries: 3
      max-interval: 2s
      initial-interval: 500ms
      multiplier: 1.5

spring:
  kafka:
    client-id: demo-consumer
    bootstrap-servers: 127.0.0.1:9092,127.0.0.1:9093
    listener:
      ack-mode: record
    producer:
      client-id: dlt-producer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonDeserializer
      retries: 3
    consumer:
      max-poll-records: 3
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

    # https://docs.spring.io/spring-kafka/api/constant-values.html
    properties:
      spring.json.value.default.type: edu.sandbox.springbootkafka.consumer.model.Message

      # In case if type is not in trusted package we will receive an exception:
      # Caused by: java.lang.IllegalArgumentException: The class 'edu.sandbox.springbootkafkabasics.producer.model.Message' is not in the trusted packages: [java.util, java.lang, edu.sandbox.springbootkafkabasics.consumer.model]. If you believe this class is safe to deserialize, please provide its name. If the serialization is only done by a trusted source, you can also enable trust all (*).
      spring.json.type.mapping: edu.sandbox.springbootkafka.producer.model.Message:edu.sandbox.springbootkafka.consumer.model.Message
